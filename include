// FILE: vscp_classes.h 
//
// Copyright (C) 2002 Ake Hedman akhe@eurosource.se 
//
// This software is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.
//
//

#ifndef ______VSCP_TYPES_______
#define ______VSCP_TYPES_______

//-----------------------------------------------------------------------------
//                   Types for CLASS --- VSCP Protocol Functionality
//-----------------------------------------------------------------------------

// Type = 0		Undefined
#define VSCP_TYPE_UNDEFINES						0

// Type = 1		Segment Controler heartbeat
#define VSCP_TYPE_SEGMENT_CONTROLLER_HEARTBEAT	1

struct structSegCtrlHeartBeat {
	unsigned long crc32;
	unsigned long curtime;
};

// Type = 2		New node online
#define VSCP_TYPE_NEW_NODE_ONLINE				2

// Type = 3		New node online, Part 1 - addressed
#define VSCP_TYPE_NEW_NODE_ONLINE_PART1			3

// Type = 4		New node online, Part 2 - addressed
#define VSCP_TYPE_NEW_NODE_ONLINE_PART2			4

// Type = 5		Request for address part 2
#define VSCP_TYPE_REQUEST_ADDRESS_PART2			5

// Type = 6		Set nickname id for node
#define VSCP_TYPE_SET_NICKNAME					6

// Type = 7		Nickname id accepted
#define VSCP_TYPE_NICKNAME_ACCEPTED				7

// Type = 8		Drop nickname id/Reset device
#define VSCP_TYPE_DROP_NICKNAME					8

// Type = 9		Read register
#define VSCP_TYPE_READ_REGISTER					9

// Type = 10	Read/Write response
#define VSCP_TYPE_RW_RESPONSE					10

// Type = 11	Write register
#define VSCP_TYPE_WRITE_REGISTER				11

// Type = 12	Enter boot loader mode
#define VSCP_TYPE_ENTER_BOOT_LOADER_MODE		12

// Type = 13	ACK boot loader mode
#define VSCP_TYPE_BOOT_LOADER_ACK				13

// Type = 14	NACK boot loader mode
#define VSCP_TYPE_BOOT_LOADER_NACK				14

// Type = 15	Start block data transfere
#define VSCP_TYPE_BOOT_LOADER_START				15

// Type = 16	Block data
#define VSCP_TYPE_BOOT_LOADER_DATA				16

// Type = 17	ACK data block
#define VSCP_TYPE_BOOT_LOADER_DATA_ACK			17

// Type = 18	NACK data block
#define VSCP_TYPE_BOOT_LOADER_DATA_NACK			18

// Type = 19	Program data block
#define VSCP_TYPE_BOOT_LOADER_PROGRAM			19

// Type = 20	ACK program data block
#define VSCP_TYPE_BOOT_LOADER_PROGRAM_ACK		20

// Type = 21	NACK program data block
#define VSCP_TYPE_BOOT_LOADER_PROGRAM_NACK		21


//-----------------------------------------------------------------------------
//                   Types for CLASS --- Alarm
//-----------------------------------------------------------------------------
 


//-----------------------------------------------------------------------------
//                   Types for CLASS --- Security
//-----------------------------------------------------------------------------
 


//-----------------------------------------------------------------------------
//                   Types for CLASS --- Measurement
//-----------------------------------------------------------------------------
 


//-----------------------------------------------------------------------------
//                   Types for CLASS --- Data
//-----------------------------------------------------------------------------
 


//-----------------------------------------------------------------------------
//                   Types for CLASS --- Information Events
//-----------------------------------------------------------------------------

// Type = 0		Undefined new event
#define VSCP_TYPE_INFORMATION_EVENT					        0

// Type = 1		
#define VSCP_TYPE_INFORMATION_EVENT_BUTTON			    1

// Type = 2		
#define VSCP_TYPE_INFORMATION_EVENT_MOUSE			      2

// Type = 3		
#define VSCP_TYPE_INFORMATION_EVENT_ON				      3

// Type = 4		
#define VSCP_TYPE_INFORMATION_EVENT_OFF				      4

// Type = 5		
#define VSCP_TYPE_INFORMATION_EVENT_ALIVE			      5

// Type = 6		
#define VSCP_TYPE_INFORMATION_EVENT_TERMINATING		  6

// Type = 7		
#define VSCP_TYPE_INFORMATION_EVENT_OPEN			      7

// Type = 8		
#define VSCP_TYPE_INFORMATION_EVENT_CLOSE			      8

// Type = 9		
#define VSCP_TYPE_INFORMATION_EVENT_HEARTBEAT		    9

// Type = 10		
#define VSCP_TYPE_INFORMATION_EVENT_BELOW_LIMIT		  10

// Type = 11		
#define VSCP_TYPE_INFORMATION_EVENT_ABOVE_LIMIT		  11

// Type = 12		
#define VSCP_TYPE_INFORMATION_EVENT_PULSE			      12

// Type = 13		
#define VSCP_TYPE_INFORMATION_EVENT_ERROR			      13

// ---
// Type = 14
// Type = 15
// Type = 16

// Type = 17		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_MORNING	17

// Type = 18		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_DAY		18

// Type = 19		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_AFTERNOON	19

// Type = 20		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_EVENING	20

// Type = 21		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_NIGHT		21

// Type = 22		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_SEE_YOU_SOON	22

// Type = 23		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_GOODBYE	23

// Type = 24		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_STOP		24

// Type = 25		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_START		25

// Type = 26		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_RESET		26

// Type = 27		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_INTERRUPT	27

// Type = 28		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_SLEEP		28

// Type = 29		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_WAKEUP		29

// Type = 30		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_DUSK		30

// Type = 31		
#define VSCP_TYPE_GENERAL_EVENT_GOOD_DAWN		31

// ----
// Type = 31
// Type = 32
// Type = 33
// Type = 34
// Type = 35
// Type = 36
// Type = 37
// Type = 38
// Type = 39

// Type = 40		
#define VSCP_TYPE_GENERAL_EVENT_DIM_DONE		40

//-----------------------------------------------------------------------------
//                   Types for CLASS --- Control
//-----------------------------------------------------------------------------

// Type = 1		Mute on/off
#define VSCP_TYPE_CTRL_MUTE						1 

// Type = 2		All lamps on/off
#define VSCP_TYPE_CTRL_ALL_LAMPS			2 

// Type = 20		Dim on/off
#define VSCP_TYPE_CTRL_DIM						20

//-----------------------------------------------------------------------------
//                   Types for CLASS --- Phone
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- LIN interface
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- IR interface
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- 1-wire protocol i/f
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- X10 i/f
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- LON
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- EIB
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- SNAP
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- MUMIN
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- Laboratory
//-----------------------------------------------------------------------------
 

//-----------------------------------------------------------------------------
//                   Types for CLASS --- Local
//-----------------------------------------------------------------------------
 
#endif
